---
- name: "Ensure root CA directories exist"
  run_once: true
  delegate_to: localhost
  file:
    path: '{{ nginx_ownca_dir }}'
    state: directory
  tags:
    - nginx
    - openssl

- name: Create private key with password protection
  delegate_to: localhost
  openssl_privatekey:
    path: "{{ nginx.ownca.root_key }}"
    #passphrase: "{{ nginx_ownca_passphrase|default(omit) }}"
    #cipher: "{{ nginx_ownca_cipher|default(omit) }}"
  register: ca_key
  tags:
    - nginx
    - openssl

- name: Create certificate signing request (CSR) for CA certificate
  delegate_to: localhost
  openssl_csr:
    path: "{{ nginx.ownca.root_csr }}"
    privatekey_path: "{{ ca_key.filename }}"
    #privatekey_passphrase: "{{ nginx_ownca_passphrase|default(omit) }}"
    common_name: "{{ nginx_ownca_common_name }}"
    email_address: "{{ nginx_ownca_email_address }}"
    country_name: "{{ nginx_ownca_country_name }}"
    state_or_province_name: "{{ nginx_ownca_state_name }}"
    organization_name: "{{ nginx_ownca_organization_name }}"
    organizational_unit_name: "{{ nginx_ownca_organizational_unit_name }}"
    use_common_name_for_san: false  # Don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr
  tags:
    - nginx
    - openssl

- name: Create self-signed CA certificate from CSR
  delegate_to: localhost
  openssl_certificate:
    path: "{{ nginx.ownca.root_crt }}"
    csr_path: "{{ ca_csr.filename }}"
    privatekey_path: "{{ ca_key.filename }}"
    #privatekey_passphrase: "{{ nginx_ownca_passphrase|default(omit) }}"
    provider: selfsigned
  register: ca_crt
  tags:
    - nginx
    - openssl
