---
argument_specs:
    main:
    	short_description: "Install and configure STIG Manager Watcher on your system."
    	description: >
      		Install all required packages, configure required files and manage services.
    	author: Jason Hickey
        options:
            watcher_pkg:
                default: "tar.gz"
                description: "The extention representing the type of file to lookup|download|unpack"
                type: "str"
            watcher_version:
                default: "1.4.4"
                description: "The package version to install"
                type: "str"
            watcher_archive:
                default: "stigman-watcher-linux-{{ watcher_version }}.{{ watcher_pkg }}"
                description: "stigman-watcher install archive filename"
                type: "str"
            watcher_download_url:
                default: "https://github.com/NUWCDIVNPT/stigman-watcher/releases/download/{{ watcher_version }}/{{ watcher_archive }}"
                description: "Download URL for stigman-watcher"
                type: "str"
            watcher_installdir:
                default: "{{ watcher_dest }}/stigman-watcher-{{ watcher_version }}"
                description: "Installation path for stigman-watcher"
                type: "str"
            watcher_offline_install
                default: true
                description: >
                    Perform an offline install. 
                    When True, ansible will look for the files in the root path from which the playbook was run"
                    When False, ansible will download the file to the root path from which the playbook was run"
                type: "bool"
            watcher_auth_strategy:
                default: "client_id"
                description: "The athentication strategy"
                type: "str"
                choices:
                  - client_id
                  - client_key
            watcher_dest:
                default: "/opt"
                description: "Installation root path"
                type: "str"
            watcher_home:
                default: "{{ watcher_installdir }}"
                description: "Installation work directory"
                type: "str"
            watcher_service_user:
                default: "stigman"
                description: "Posix account username"
                type: "str"
            watcher_service_group:
                default: "stigman"
                description: "Posix account group"
                type: "str"
            watcher_service_restart_always:
                default: false
                description: "systemd restart always behavior of service; takes precedence over watcher_service_restart_on_failure if true"
                type: "bool"
            watcher_service_restart_on_failure:
                default: true
                description: "systemd restart on-failure behavior of service"
                type: "bool"
            watcher_service_restartsec:
                default: "60s"
                description: "systemd RestartSec for service"
                type: "str"
            watcher_config_file:
                default: "{{ watcher_home }}/.env"
                description: "File for configuration"
                type: "str"
            watcher_hostname:
                default: "localhost"
                description: "The hostname stigman-wacher should access keycloak"
                type: "bool"
            watcher_http_port:
                default: "8080"
                description: "The port stigman-wacher should access keycloak"
                type: "str"
         	watcher_http_context:
                default: "/"
                description: "keycloak context path for rest calls. older version uses /auth"
                type: "str"
           watcher_force_health_check:
                default: true
                description: "Perform health check on endpoints"
                type: "bool"
        	watcher_health_check_url_path:
                default: "/api/op/definition?jsonpath=%24.info.version"
                description: >
                    Path to the health check endpoint; scheme, host and watcher_http_context 
                    path that will be prepended automatically
                type: "str"

    downstream:
        options:
            watcher_add_existing:
                default: true
                description: "The IP address on which the the API server will listen (WATCHER_ADD_EXISTING=1)"
                type: "bool"
            watcher_api_base:
                default: "http://localhost:54000/api"
                description: "Required. Base URL of the STIG Manager API service (WATCHER_API_BASE)"
                type: "int"
            watcher_authority:
                default: "http://localhost:8080/realms/stigman"
                description: "Required. Base URL of the OIDC authentication service that issues OAuth2 tokens for the API (WATCHER_AUTHORITY)"
                type: "int"
            watcher_cargo_delay:
                default: 2000
                description: "Milliseconds to delay processing the queue (WATCHER_CARGO_DELAY). Range: 2000 to 30000"
                type: "int"
            watcher_cargo_size:
                default: 25
                description: "Maximum queue size that triggers processing (WATCHER_CARGO_SIZE) Range: 1 to 100"
                type: "int"
            watcher_client_id:
                default: "stigman-watcher"
                description: >
					Required 
                    OIDC clientId to authenticate (WATCHER_CLIENT_ID)
                    You will be prompted for the client secret if --client-key is not present and --prompt is present, 
                    unless WATCHER_CLIENT_SECRET is set
                type: "str"
            watcher_client_secret:
                default: "954fd71a-dad6-47ab-8035-060268f3d396"
                description: >
      		       	OIDC client secret to authenticate (WATCHER_CLIENT_SECRET)
                    You will be prompted for the client secret if --client-key is not present and --prompt is present, 
                    Required
                type: "str"
            watcher_client_key:
                default: ""
                description: >
                    Path to a PEM encoded private key (WATCHER_CLIENT_KEY). 
                    If the key is encrypted, you will be prompted for the passphrase if --prompt is present, unless WATCHER_CLIENT_KEY_PASSPHRASE is set.
                type: "str"
            watcher_client_key_passphrase:
                default: ""
                description: >
					Passphrase for private key (WATCHER_CLIENT_KEY_PASSPHRASE). 
                    If the key is encrypted, you will be prompted for the passphrase if --prompt is present, unless it is set.
                type: "str"
            watcher_collection:
                default: 1
                description: "Required. collectionId to manage"
                type: "int"
			watcher_create_objects:
                default: true
                description: Create Assets or STIG Assignments as needed (WATCHER_CREATE_OBJECTS=1). Negate with --no-create-objects.  
		        type: "bool"  
            watcher_ignore_globs:
                default: ["**/ignoreddir","**/somedir/ignoredfile"]
                description: File or directory glob(s) to ignore. Can be invoked multiple times. (WATCHER_IGNORE_GLOBS=<csv>).
	            type: "list"
            watcher_log_file:
                default: "logs/watcher.log"
                description: "Path to the log file which will be created if needed (WATCHER_LOG_FILE). Disable file logging with --no-log-file."
                type: "str"         
            watcher_log_file_level:
                default: "verbose"
                description: "Log level for the log file (WATCHER_LOG_FILE_LEVEL). One of:"
                type: "str"
                choices:
                  - error
                  - warn
                  - info
                  - http
                  - verbose
                  - debug
                  - silly
            watcher_history_file:
                default: "history.log"
                description: >
                   When using `--mode scan`, this specifies the path to a scan history file (WATCHER_HISTORY_FILE). 
                   The file will be created if it doesn't exist. This option is not applicable and is disregarded if `--mode events` is used. 
                   To disable the history file feature, use `--no-history-file`. 
                   Each file found by the scanner is recorded in this file, and the scanner will skip over files already listed in it. 
                type: "str"
            watcher_log_level:
                default: info
                description: "Log level for the console (WATCHER_LOG_LEVEL)."
                type: "list"
                choices:
                  - error
                  - warn
                  - info
                  - http
                  - verbose
                  - debug
                  - silly
            watcher_path:
                default: ["./watched", "//unc/path"]
                description: "Base path to watch (WATCHER_PATH)."
                type: "list"
            watcher_use_polling:
                default: false
                description: "Don't use polling with --mode events, reduces CPU usage (WATCHER_EVENT_POLLING=0)."
                type: "bool"
            watcher_stability_threshold:
                default: 5000
                description: >
                    If `--mode events`, milliseconds to wait for file size to stabilize (WATCHER_STABILITY_THRESHOLD). 
                    May be helpful when watching network shares. Igonred with `--mode scan` Range: 0 to 10000
                type: "int"
            watcher_mode:
                default: "events"
                description: "Strategy for detecting files to be processed. (WATCHER_MODE)"
                type: "str"
                choices:
                  - scan
                  - events






