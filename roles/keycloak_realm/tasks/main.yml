---
- name: Generate keycloak auth token
  ansible.builtin.uri:
    url: "{{ keycloak_url }}/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id={{ keycloak_auth_client }}&username={{ keycloak_admin_user }}&password={{ keycloak_admin_pass }}&grant_type=password"
    validate_certs: false
  #no_log: "{{ keycloak_no_log | default('True') }}"
  register: keycloak_auth_response
  until: keycloak_auth_response.status == 200
  retries: 5
  delay: 3
  tags:
    - always

- name: "Determine if realm exists"
  ansible.builtin.uri:
    url: "{{ keycloak_url }}/admin/realms/{{ keycloak_realm }}"
    method: GET
    status_code:
      - 200
      - 404
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{ keycloak_auth_response.json.access_token }}"
  register: keycloak_realm_exists
  tags:
    - always

- name: Create Realm
  ansible.builtin.uri:
    url: "{{ keycloak_url }}{{ keycloak_context }}/admin/realms"
    method: POST
    body: "{{ lookup('template', 'stigman-realm.json.j2') }}"
    validate_certs: false
    body_format: json
    headers:
      Authorization: "Bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 201
  when: keycloak_realm_exists.status == 404
  tags:
    - always

- name: Flush pending handlers
  ansible.builtin.meta: flush_handlers
  tags:
    - always
